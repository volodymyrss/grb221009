{"output_nb": {"cells": [{"cell_type": "code", "execution_count": 1, "id": "91783784", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:07:07.689242Z", "iopub.status.busy": "2023-01-04T20:07:07.688393Z", "iopub.status.idle": "2023-01-04T20:07:07.934501Z", "shell.execute_reply": "2023-01-04T20:07:07.932634Z"}, "papermill": {"duration": 0.259441, "end_time": "2023-01-04T20:07:07.938577", "exception": false, "start_time": "2023-01-04T20:07:07.679136", "status": "completed"}, "tags": []}, "outputs": [], "source": ["from astropy.io import fits\n", "import ogip"]}, {"cell_type": "code", "execution_count": 2, "id": "c777c7a3", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:07:07.945841Z", "iopub.status.busy": "2023-01-04T20:07:07.945443Z", "iopub.status.idle": "2023-01-04T20:07:07.952598Z", "shell.execute_reply": "2023-01-04T20:07:07.951619Z"}, "papermill": {"duration": 0.012702, "end_time": "2023-01-04T20:07:07.954488", "exception": false, "start_time": "2023-01-04T20:07:07.941786", "status": "completed"}, "tags": []}, "outputs": [], "source": ["spec = fits.open(\"spi/spectrum_GRB2rGRB2022sgrsp10aCVGRB_photo_GRB221009A_avrg.fits\")\n"]}, {"cell_type": "code", "execution_count": 3, "id": "8efabd8c", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:07:07.959356Z", "iopub.status.busy": "2023-01-04T20:07:07.959102Z", "iopub.status.idle": "2023-01-04T20:07:08.202258Z", "shell.execute_reply": "2023-01-04T20:07:08.201446Z"}, "papermill": {"duration": 0.247812, "end_time": "2023-01-04T20:07:08.204215", "exception": false, "start_time": "2023-01-04T20:07:07.956403", "status": "completed"}, "tags": ["outputs"]}, "outputs": [{"data": {"text/plain": ["array([ 1.8565854 ,  2.6278205 ,  0.91447306,  1.1361065 ,  1.0035472 ,\n", "        1.5506963 , -0.14298652,  0.2786443 , -0.88608354, -0.6561288 ],\n", "      dtype=float32)"]}, "execution_count": 3, "metadata": {}, "output_type": "execute_result"}], "source": ["d = spec[2].data\n", "\n", "d['RATE'] / d['STAT_ERR']"]}, {"cell_type": "code", "execution_count": 4, "id": "81579f4f", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:07:08.210078Z", "iopub.status.busy": "2023-01-04T20:07:08.209814Z", "iopub.status.idle": "2023-01-04T20:07:08.213177Z", "shell.execute_reply": "2023-01-04T20:07:08.212601Z"}, "papermill": {"duration": 0.008851, "end_time": "2023-01-04T20:07:08.215121", "exception": false, "start_time": "2023-01-04T20:07:08.206270", "status": "completed"}, "tags": []}, "outputs": [], "source": ["import numpy as np"]}, {"cell_type": "code", "execution_count": 5, "id": "28c2a7e6", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:07:08.220712Z", "iopub.status.busy": "2023-01-04T20:07:08.220434Z", "iopub.status.idle": "2023-01-04T20:07:08.224359Z", "shell.execute_reply": "2023-01-04T20:07:08.223793Z"}, "papermill": {"duration": 0.0086, "end_time": "2023-01-04T20:07:08.226000", "exception": false, "start_time": "2023-01-04T20:07:08.217400", "status": "completed"}, "tags": []}, "outputs": [], "source": ["sn_max = np.max(d['RATE'] / d['STAT_ERR'])\n", "sn = np.max(d['RATE'] / d['STAT_ERR'])"]}, {"cell_type": "code", "execution_count": 6, "id": "8ba8a4f4", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:07:08.231180Z", "iopub.status.busy": "2023-01-04T20:07:08.230880Z", "iopub.status.idle": "2023-01-04T20:07:09.581974Z", "shell.execute_reply": "2023-01-04T20:07:09.581106Z"}, "papermill": {"duration": 1.356254, "end_time": "2023-01-04T20:07:09.584081", "exception": false, "start_time": "2023-01-04T20:07:08.227827", "status": "completed"}, "tags": ["injected-gather-outputs"]}, "outputs": [{"data": {"application/scrapbook.scrap.json+json": {"data": [[1, 1747.0128173828125, 940.981689453125, 0.0, 0], [2, 7444.55224609375, 2832.97607421875, 0.0, 0], [3, 6075.8046875, 6644.0498046875, 0.0, 0], [4, 8662.9287109375, 7625.1025390625, 0.0, 0], [5, 4660.2578125, 4643.78515625, 0.0, 0], [6, 6577.1298828125, 4241.404296875, 0.0, 0], [7, -420.91455078125, 2943.73583984375, 0.0, 0], [8, 963.8548583984375, 3459.087158203125, 0.0, 0], [9, -2667.446533203125, 3010.378173828125, 0.0, 0], [10, -2611.49853515625, 3980.161376953125, 0.0, 0]], "encoder": "json", "name": "d", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "d"}}, "output_type": "display_data"}, {"data": {"application/scrapbook.scrap.json+json": {"data": [1.8565853834152222, 2.6278204917907715, 0.9144730567932129, 1.1361064910888672, 1.003547191619873, 1.5506962537765503, -0.14298652112483978, 0.27864429354667664, -0.8860835433006287, -0.6561288237571716], "encoder": "json", "name": "d['RATE'] / d['STAT_ERR']", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "d['RATE'] / d['STAT_ERR']"}}, "output_type": "display_data"}, {"data": {"text/plain": ["False"]}, "execution_count": 6, "metadata": {}, "output_type": "execute_result"}], "source": ["\n", "import papermill as pm\n", "import scrapbook as sb\n", "import base64\n", "import json\n", "import os\n", "    \n", "from nb2workflow.nbadapter import denumpyfy\n", "from nb2workflow.json import CustomJSONEncoder\n", "\n", "\n", "try:\n", "    sb.glue(\"d\",denumpyfy(d))\n", "except Exception as e:\n", "    print(\"failed to glue d\", d)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"d\",json.dumps(denumpyfy(d), cls=CustomJSONEncoder))\n", "\n", "isinstance(d,str) and os.path.exists(d) and sb.glue(\"d_content\",base64.b64encode(open(d,'rb').read()).decode())\n", "\n", "try:\n", "    sb.glue(\"d['RATE'] / d['STAT_ERR']\",denumpyfy(d['RATE'] / d['STAT_ERR']))\n", "except Exception as e:\n", "    print(\"failed to glue d['RATE'] / d['STAT_ERR']\", d['RATE'] / d['STAT_ERR'])\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"d['RATE'] / d['STAT_ERR']\",json.dumps(denumpyfy(d['RATE'] / d['STAT_ERR']), cls=CustomJSONEncoder))\n", "\n", "isinstance(d['RATE'] / d['STAT_ERR'],str) and os.path.exists(d['RATE'] / d['STAT_ERR']) and sb.glue(\"d['RATE'] / d['STAT_ERR']_content\",base64.b64encode(open(d['RATE'] / d['STAT_ERR'],'rb').read()).decode())\n"]}], "metadata": {"kernelspec": {"display_name": "Python 3.9.13 ('base')", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.9.13"}, "papermill": {"default_parameters": {}, "duration": 3.70274, "end_time": "2023-01-04T20:07:10.004260", "environment_variables": {}, "exception": null, "input_path": "/tmp/nb2w-92rwholl/spi_preproc.ipynb", "output_path": "/tmp/nb2w-92rwholl/spi_output.ipynb", "parameters": {}, "start_time": "2023-01-04T20:07:06.301520", "version": "2.4.0"}, "vscode": {"interpreter": {"hash": "1892832a55cb9b21d693a1e0afb7563f6ad424a1b7b3da21728b3ea0874fe733"}}}, "nbformat": 4, "nbformat_minor": 5}, "output_values": {"d": [[1, 1747.0128173828125, 940.981689453125, 0.0, 0], [2, 7444.55224609375, 2832.97607421875, 0.0, 0], [3, 6075.8046875, 6644.0498046875, 0.0, 0], [4, 8662.9287109375, 7625.1025390625, 0.0, 0], [5, 4660.2578125, 4643.78515625, 0.0, 0], [6, 6577.1298828125, 4241.404296875, 0.0, 0], [7, -420.91455078125, 2943.73583984375, 0.0, 0], [8, 963.8548583984375, 3459.087158203125, 0.0, 0], [9, -2667.446533203125, 3010.378173828125, 0.0, 0], [10, -2611.49853515625, 3980.161376953125, 0.0, 0]], "d['RATE'] / d['STAT_ERR']": [1.8565853834152222, 2.6278204917907715, 0.9144730567932129, 1.1361064910888672, 1.003547191619873, 1.5506962537765503, -0.14298652112483978, 0.27864429354667664, -0.8860835433006287, -0.6561288237571716]}}