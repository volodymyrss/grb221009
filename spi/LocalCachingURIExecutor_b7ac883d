{"output_nb": {"cells": [{"cell_type": "code", "execution_count": 1, "id": "62a4577c", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:16:42.054488Z", "iopub.status.busy": "2023-01-04T20:16:42.053907Z", "iopub.status.idle": "2023-01-04T20:16:42.293244Z", "shell.execute_reply": "2023-01-04T20:16:42.292424Z"}, "papermill": {"duration": 0.248431, "end_time": "2023-01-04T20:16:42.295605", "exception": false, "start_time": "2023-01-04T20:16:42.047174", "status": "completed"}, "tags": []}, "outputs": [], "source": ["from astropy.io import fits\n", "import ogip"]}, {"cell_type": "code", "execution_count": 2, "id": "6ad3c0d1", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:16:42.303348Z", "iopub.status.busy": "2023-01-04T20:16:42.302517Z", "iopub.status.idle": "2023-01-04T20:16:42.307380Z", "shell.execute_reply": "2023-01-04T20:16:42.306682Z"}, "papermill": {"duration": 0.010577, "end_time": "2023-01-04T20:16:42.309027", "exception": false, "start_time": "2023-01-04T20:16:42.298450", "status": "completed"}, "tags": []}, "outputs": [], "source": ["spec = fits.open(\"spi/spectrum_GRB2rGRB2022sgrsp10aCVGRB_photo_GRB221009A_avrg.fits\")\n"]}, {"cell_type": "code", "execution_count": 3, "id": "0f7f3183", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:16:42.314431Z", "iopub.status.busy": "2023-01-04T20:16:42.313713Z", "iopub.status.idle": "2023-01-04T20:16:42.550404Z", "shell.execute_reply": "2023-01-04T20:16:42.549648Z"}, "papermill": {"duration": 0.24126, "end_time": "2023-01-04T20:16:42.551999", "exception": false, "start_time": "2023-01-04T20:16:42.310739", "status": "completed"}, "tags": []}, "outputs": [{"data": {"text/plain": ["array([ 1.8565854 ,  2.6278205 ,  0.91447306,  1.1361065 ,  1.0035472 ,\n", "        1.5506963 , -0.14298652,  0.2786443 , -0.88608354, -0.6561288 ],\n", "      dtype=float32)"]}, "execution_count": 3, "metadata": {}, "output_type": "execute_result"}], "source": ["d = spec[2].data\n", "\n", "d['RATE'] / d['STAT_ERR']"]}, {"cell_type": "code", "execution_count": 4, "id": "330f57bb", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:16:42.558029Z", "iopub.status.busy": "2023-01-04T20:16:42.557778Z", "iopub.status.idle": "2023-01-04T20:16:42.561494Z", "shell.execute_reply": "2023-01-04T20:16:42.560703Z"}, "papermill": {"duration": 0.010163, "end_time": "2023-01-04T20:16:42.564171", "exception": false, "start_time": "2023-01-04T20:16:42.554008", "status": "completed"}, "tags": []}, "outputs": [], "source": ["import numpy as np"]}, {"cell_type": "code", "execution_count": 5, "id": "220b399e", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:16:42.569893Z", "iopub.status.busy": "2023-01-04T20:16:42.569201Z", "iopub.status.idle": "2023-01-04T20:16:42.574179Z", "shell.execute_reply": "2023-01-04T20:16:42.573536Z"}, "papermill": {"duration": 0.009295, "end_time": "2023-01-04T20:16:42.575732", "exception": false, "start_time": "2023-01-04T20:16:42.566437", "status": "completed"}, "tags": ["outputs"]}, "outputs": [], "source": ["sn_max = np.max(d['RATE'] / d['STAT_ERR'])\n", "sn = np.max(d['RATE'] / d['STAT_ERR'])\n", "sn_total = np.sum(d['RATE']) / np.sum(d['STAT_ERR']**2)**0.5"]}, {"cell_type": "code", "execution_count": 6, "id": "791e7ee1", "metadata": {"execution": {"iopub.execute_input": "2023-01-04T20:16:42.582238Z", "iopub.status.busy": "2023-01-04T20:16:42.581851Z", "iopub.status.idle": "2023-01-04T20:16:43.997300Z", "shell.execute_reply": "2023-01-04T20:16:43.996370Z"}, "papermill": {"duration": 1.421673, "end_time": "2023-01-04T20:16:43.999729", "exception": false, "start_time": "2023-01-04T20:16:42.578056", "status": "completed"}, "tags": ["injected-gather-outputs"]}, "outputs": [{"data": {"application/scrapbook.scrap.json+json": {"data": 2.6278204917907715, "encoder": "json", "name": "sn_max", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "sn_max"}}, "output_type": "display_data"}, {"data": {"application/scrapbook.scrap.json+json": {"data": 2.6278204917907715, "encoder": "json", "name": "sn", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "sn"}}, "output_type": "display_data"}, {"data": {"application/scrapbook.scrap.json+json": {"data": 2.1721076372265005, "encoder": "json", "name": "sn_total", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "sn_total"}}, "output_type": "display_data"}, {"data": {"text/plain": ["False"]}, "execution_count": 6, "metadata": {}, "output_type": "execute_result"}], "source": ["\n", "import papermill as pm\n", "import scrapbook as sb\n", "import base64\n", "import json\n", "import os\n", "    \n", "from nb2workflow.nbadapter import denumpyfy\n", "from nb2workflow.json import CustomJSONEncoder\n", "\n", "\n", "try:\n", "    sb.glue(\"sn_max\",denumpyfy(sn_max))\n", "except Exception as e:\n", "    print(\"failed to glue sn_max\", sn_max)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"sn_max\",json.dumps(denumpyfy(sn_max), cls=CustomJSONEncoder))\n", "\n", "isinstance(sn_max,str) and os.path.exists(sn_max) and sb.glue(\"sn_max_content\",base64.b64encode(open(sn_max,'rb').read()).decode())\n", "\n", "try:\n", "    sb.glue(\"sn\",denumpyfy(sn))\n", "except Exception as e:\n", "    print(\"failed to glue sn\", sn)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"sn\",json.dumps(denumpyfy(sn), cls=CustomJSONEncoder))\n", "\n", "isinstance(sn,str) and os.path.exists(sn) and sb.glue(\"sn_content\",base64.b64encode(open(sn,'rb').read()).decode())\n", "\n", "try:\n", "    sb.glue(\"sn_total\",denumpyfy(sn_total))\n", "except Exception as e:\n", "    print(\"failed to glue sn_total\", sn_total)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"sn_total\",json.dumps(denumpyfy(sn_total), cls=CustomJSONEncoder))\n", "\n", "isinstance(sn_total,str) and os.path.exists(sn_total) and sb.glue(\"sn_total_content\",base64.b64encode(open(sn_total,'rb').read()).decode())\n"]}], "metadata": {"kernelspec": {"display_name": "Python 3.9.13 ('base')", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.9.13"}, "papermill": {"default_parameters": {}, "duration": 3.619033, "end_time": "2023-01-04T20:16:44.419307", "environment_variables": {}, "exception": null, "input_path": "/tmp/nb2w-u93irncc/spi_preproc.ipynb", "output_path": "/tmp/nb2w-u93irncc/spi_output.ipynb", "parameters": {}, "start_time": "2023-01-04T20:16:40.800274", "version": "2.4.0"}, "vscode": {"interpreter": {"hash": "1892832a55cb9b21d693a1e0afb7563f6ad424a1b7b3da21728b3ea0874fe733"}}}, "nbformat": 4, "nbformat_minor": 5}, "output_values": {"sn_max": 2.6278204917907715, "sn": 2.6278204917907715, "sn_total": 2.1721076372265005}}