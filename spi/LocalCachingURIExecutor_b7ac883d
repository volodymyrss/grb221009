{"output_nb": {"cells": [{"cell_type": "code", "execution_count": 1, "id": "dce5e69b", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:50.752380Z", "iopub.status.busy": "2023-01-05T15:34:50.751838Z", "iopub.status.idle": "2023-01-05T15:34:51.749501Z", "shell.execute_reply": "2023-01-05T15:34:51.748330Z"}, "papermill": {"duration": 1.007868, "end_time": "2023-01-05T15:34:51.752919", "exception": false, "start_time": "2023-01-05T15:34:50.745051", "status": "completed"}, "tags": []}, "outputs": [], "source": ["from astropy.io import fits\n", "import ogip"]}, {"cell_type": "code", "execution_count": 2, "id": "64379ebd", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:51.767963Z", "iopub.status.busy": "2023-01-05T15:34:51.767002Z", "iopub.status.idle": "2023-01-05T15:34:51.773771Z", "shell.execute_reply": "2023-01-05T15:34:51.772694Z"}, "papermill": {"duration": 0.022637, "end_time": "2023-01-05T15:34:51.779631", "exception": false, "start_time": "2023-01-05T15:34:51.756994", "status": "completed"}, "tags": []}, "outputs": [], "source": ["# oda:version \"v1\""]}, {"cell_type": "code", "execution_count": 3, "id": "e76ab083", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:51.821621Z", "iopub.status.busy": "2023-01-05T15:34:51.821177Z", "iopub.status.idle": "2023-01-05T15:34:51.835568Z", "shell.execute_reply": "2023-01-05T15:34:51.831548Z"}, "papermill": {"duration": 0.040991, "end_time": "2023-01-05T15:34:51.841097", "exception": false, "start_time": "2023-01-05T15:34:51.800106", "status": "completed"}, "tags": []}, "outputs": [], "source": ["rmf = fits.open(\"spi/rmf_GRB2rGRB2022sgrsp10aCVGRB_photo_GRB221009A_avrg.fits\")\n", "spec = fits.open(\"spi/spectrum_GRB2rGRB2022sgrsp10aCVGRB_photo_GRB221009A_avrg.fits\")\n"]}, {"cell_type": "code", "execution_count": 4, "id": "a1d41df9", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:51.878033Z", "iopub.status.busy": "2023-01-05T15:34:51.877565Z", "iopub.status.idle": "2023-01-05T15:34:52.925771Z", "shell.execute_reply": "2023-01-05T15:34:52.915171Z"}, "papermill": {"duration": 1.068853, "end_time": "2023-01-05T15:34:52.928996", "exception": false, "start_time": "2023-01-05T15:34:51.860143", "status": "completed"}, "tags": []}, "outputs": [{"data": {"text/plain": ["array([ 1.8565854 ,  2.6278205 ,  0.91447306,  1.1361065 ,  1.0035472 ,\n", "        1.5506963 , -0.14298652,  0.2786443 , -0.88608354, -0.6561288 ],\n", "      dtype=float32)"]}, "execution_count": 4, "metadata": {}, "output_type": "execute_result"}], "source": ["d = spec[2].data\n", "\n", "d['RATE'] / d['STAT_ERR']"]}, {"cell_type": "code", "execution_count": 5, "id": "d3822d9f", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:52.940988Z", "iopub.status.busy": "2023-01-05T15:34:52.940255Z", "iopub.status.idle": "2023-01-05T15:34:52.963743Z", "shell.execute_reply": "2023-01-05T15:34:52.958648Z"}, "papermill": {"duration": 0.039937, "end_time": "2023-01-05T15:34:52.973061", "exception": false, "start_time": "2023-01-05T15:34:52.933124", "status": "completed"}, "tags": []}, "outputs": [], "source": ["e1 = rmf['SPI.-EBDS-SET'].data['E_MIN']\n", "e2 = rmf['SPI.-EBDS-SET'].data['E_MAX']\n", "\n", "ce = (e1 + e2)*0.5\n", "de = (e2 - e1)*0.5"]}, {"cell_type": "code", "execution_count": 6, "id": "d4070fcb", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:52.990951Z", "iopub.status.busy": "2023-01-05T15:34:52.990180Z", "iopub.status.idle": "2023-01-05T15:34:55.336545Z", "shell.execute_reply": "2023-01-05T15:34:55.335165Z"}, "papermill": {"duration": 2.362314, "end_time": "2023-01-05T15:34:55.339296", "exception": false, "start_time": "2023-01-05T15:34:52.976982", "status": "completed"}, "tags": []}, "outputs": [{"data": {"text/plain": ["[]"]}, "execution_count": 6, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "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\n", "text/plain": ["<Figure size 640x480 with 1 Axes>"]}, "metadata": {}, "output_type": "display_data"}], "source": ["import matplotlib.pylab as plt\n", "\n", "plt.figure()\n", "\n", "plt.errorbar(\n", "    ce,\n", "    d['RATE'],\n", "    d['STAT_ERR'],\n", "    xerr=de,\n", "    ls=\"\"\n", ")\n", "\n", "plt.loglog()"]}, {"cell_type": "code", "execution_count": 7, "id": "45412a71", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:55.355599Z", "iopub.status.busy": "2023-01-05T15:34:55.354405Z", "iopub.status.idle": "2023-01-05T15:34:55.422347Z", "shell.execute_reply": "2023-01-05T15:34:55.421011Z"}, "papermill": {"duration": 0.078906, "end_time": "2023-01-05T15:34:55.425241", "exception": false, "start_time": "2023-01-05T15:34:55.346335", "status": "completed"}, "tags": []}, "outputs": [{"data": {"text/plain": ["{'XTENSION': 'BINTABLE',\n", " 'BITPIX': 8,\n", " 'NAXIS': 2,\n", " 'NAXIS1': 18,\n", " 'NAXIS2': 10,\n", " 'PCOUNT': 0,\n", " 'GCOUNT': 1,\n", " 'TFIELDS': 5,\n", " 'TTYPE1': 'CHANNEL',\n", " 'TFORM1': 'J',\n", " 'TTYPE2': 'RATE',\n", " 'TFORM2': 'E',\n", " 'TTYPE3': 'STAT_ERR',\n", " 'TFORM3': 'E',\n", " 'TTYPE4': 'SYS_ERR',\n", " 'TFORM4': 'E',\n", " 'TTYPE5': 'QUALITY',\n", " 'TFORM5': 'I',\n", " 'EXTNAME': 'SPECTRUM',\n", " 'EXTREL': '6.5',\n", " 'TELESCOP': 'INTEGRAL',\n", " 'ORIGIN': 'ISDC',\n", " 'INSTRUME': 'SPI',\n", " 'ISDCLEVL': 'SPE',\n", " 'CREATOR': 'String',\n", " 'CONFIGUR': 'String',\n", " 'DATE': '2022-10-28T14:11:18',\n", " 'MJDREF': 51544.0,\n", " 'TIMESYS': 'TT',\n", " 'TIMEUNIT': 'd',\n", " 'TIMEREF': 'LOCAL',\n", " 'DATE-OBS': 'UTC_format',\n", " 'DATE-END': 'UTC_format',\n", " 'TSTART': 'Real',\n", " 'TSTOP': 'Real',\n", " 'TELAPSE': 'Real',\n", " 'ONTIME': 'Real',\n", " 'DEADC': 'Real',\n", " 'DATAMODE': 'String',\n", " 'OGID': 'String',\n", " 'ISOC_NUM': 'Integer',\n", " 'PT_NUM': 'Integer',\n", " 'DET_NUM': 'Integer',\n", " 'DET_REF': 'D142',\n", " 'RADECSYS': 'FK5',\n", " 'EQUINOX': 2000.0,\n", " 'RA_MIN': 'Real',\n", " 'DEC_MIN': 'Real',\n", " 'RA_MEAN': 'Real',\n", " 'DEC_MEAN': 'Real',\n", " 'RA_MAX': 'Real',\n", " 'DEC_MAX': 'Real',\n", " 'RA_MI_S': 'String',\n", " 'DEC_MI_S': 'String',\n", " 'RA_ME_S': 'String',\n", " 'DEC_ME_S': 'String',\n", " 'RA_MA_S': 'String',\n", " 'DEC_MA_S': 'String',\n", " 'RA_OBJ': 'Real',\n", " 'DEC_OBJ': 'Real',\n", " 'L2_MIN': 'Real',\n", " 'B2_MIN': 'Real',\n", " 'L2_MEAN': 'Real',\n", " 'B2_MEAN': 'Real',\n", " 'L2_MAX': 'Real',\n", " 'B2_MAX': 'Real',\n", " 'L2_OBJ': 'Real',\n", " 'B2_OBJ': 'Real',\n", " 'HDUCLASS': 'OGIP',\n", " 'HDUCLAS1': 'SPECTRUM',\n", " 'HDUVERS1': '1.2.0',\n", " 'HDUVERS': '1.2.0',\n", " 'HDUCLAS2': 'TOTAL',\n", " 'HDUCLAS3': 'RATE',\n", " 'TLMIN1': 1,\n", " 'TLMAX1': 10,\n", " 'FILTER': 'NONE',\n", " 'EXPOSURE': 134228.193639351,\n", " 'AREASCAL': 1.0,\n", " 'BACKFILE': 'NONE',\n", " 'BACKSCAL': 1.0,\n", " 'CORRFILE': 'NONE',\n", " 'CORRSCAL': 0.0,\n", " 'RESPFILE': './rmf_GRB2rGRB2022sgrsp10aCVGRB_photo_GRB221009A_avrg.fits',\n", " 'ANCRFILE': 'NONE',\n", " 'PHAVERSN': '1992a',\n", " 'DETCHANS': 10,\n", " 'CHANTYPE': 'PI',\n", " 'POISSERR': 'False',\n", " 'GROUPING': 0,\n", " 'TUNIT2': 'count/s',\n", " 'TUNIT3': 'count/s',\n", " 'EXTVER': 1,\n", " 'GRPID1': 1,\n", " 'BASETYPE': 'DAL_TABLE',\n", " 'CHECKSUM': '1D1f4B0Z1B0d1B0Z',\n", " 'DATASUM': '1124492118'}"]}, "execution_count": 7, "metadata": {}, "output_type": "execute_result"}], "source": ["dict(spec[2].header)"]}, {"cell_type": "code", "execution_count": 8, "id": "7cef2ca7", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:55.476940Z", "iopub.status.busy": "2023-01-05T15:34:55.476511Z", "iopub.status.idle": "2023-01-05T15:34:55.481197Z", "shell.execute_reply": "2023-01-05T15:34:55.480237Z"}, "papermill": {"duration": 0.030973, "end_time": "2023-01-05T15:34:55.500304", "exception": false, "start_time": "2023-01-05T15:34:55.469331", "status": "completed"}, "tags": []}, "outputs": [], "source": ["import numpy as np"]}, {"cell_type": "code", "execution_count": 9, "id": "31de70ef", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:55.518224Z", "iopub.status.busy": "2023-01-05T15:34:55.517762Z", "iopub.status.idle": "2023-01-05T15:34:55.524998Z", "shell.execute_reply": "2023-01-05T15:34:55.523881Z"}, "papermill": {"duration": 0.022192, "end_time": "2023-01-05T15:34:55.528067", "exception": false, "start_time": "2023-01-05T15:34:55.505875", "status": "completed"}, "tags": ["outputs"]}, "outputs": [], "source": ["sn_max = np.max(d['RATE'] / d['STAT_ERR'])\n", "sn = np.max(d['RATE'] / d['STAT_ERR'])\n", "sn_total = np.sum(d['RATE']) / np.sum(d['STAT_ERR']**2)**0.5\n", "exposure = spec[2].header['EXPOSURE']"]}, {"cell_type": "code", "execution_count": 10, "id": "50d9d5d1", "metadata": {"execution": {"iopub.execute_input": "2023-01-05T15:34:55.574152Z", "iopub.status.busy": "2023-01-05T15:34:55.573739Z", "iopub.status.idle": "2023-01-05T15:34:59.631851Z", "shell.execute_reply": "2023-01-05T15:34:59.630461Z"}, "papermill": {"duration": 4.072588, "end_time": "2023-01-05T15:34:59.635125", "exception": false, "start_time": "2023-01-05T15:34:55.562537", "status": "completed"}, "tags": ["injected-gather-outputs"]}, "outputs": [{"data": {"application/scrapbook.scrap.json+json": {"data": 2.6278204917907715, "encoder": "json", "name": "sn_max", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "sn_max"}}, "output_type": "display_data"}, {"data": {"application/scrapbook.scrap.json+json": {"data": 2.6278204917907715, "encoder": "json", "name": "sn", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "sn"}}, "output_type": "display_data"}, {"data": {"application/scrapbook.scrap.json+json": {"data": 2.1721076372265005, "encoder": "json", "name": "sn_total", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "sn_total"}}, "output_type": "display_data"}, {"data": {"application/scrapbook.scrap.json+json": {"data": 134228.193639351, "encoder": "json", "name": "exposure", "version": 1}}, "metadata": {"scrapbook": {"data": true, "display": false, "name": "exposure"}}, "output_type": "display_data"}, {"data": {"text/plain": ["False"]}, "execution_count": 10, "metadata": {}, "output_type": "execute_result"}], "source": ["\n", "import papermill as pm\n", "import scrapbook as sb\n", "import base64\n", "import json\n", "import os\n", "    \n", "from nb2workflow.nbadapter import denumpyfy\n", "from nb2workflow.json import CustomJSONEncoder\n", "\n", "\n", "try:\n", "    sb.glue(\"sn_max\",denumpyfy(sn_max))\n", "except Exception as e:\n", "    print(\"failed to glue sn_max\", sn_max)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"sn_max\",json.dumps(denumpyfy(sn_max), cls=CustomJSONEncoder))\n", "\n", "isinstance(sn_max,str) and os.path.exists(sn_max) and sb.glue(\"sn_max_content\",base64.b64encode(open(sn_max,'rb').read()).decode())\n", "\n", "try:\n", "    sb.glue(\"sn\",denumpyfy(sn))\n", "except Exception as e:\n", "    print(\"failed to glue sn\", sn)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"sn\",json.dumps(denumpyfy(sn), cls=CustomJSONEncoder))\n", "\n", "isinstance(sn,str) and os.path.exists(sn) and sb.glue(\"sn_content\",base64.b64encode(open(sn,'rb').read()).decode())\n", "\n", "try:\n", "    sb.glue(\"sn_total\",denumpyfy(sn_total))\n", "except Exception as e:\n", "    print(\"failed to glue sn_total\", sn_total)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"sn_total\",json.dumps(denumpyfy(sn_total), cls=CustomJSONEncoder))\n", "\n", "isinstance(sn_total,str) and os.path.exists(sn_total) and sb.glue(\"sn_total_content\",base64.b64encode(open(sn_total,'rb').read()).decode())\n", "\n", "try:\n", "    sb.glue(\"exposure\",denumpyfy(exposure))\n", "except Exception as e:\n", "    print(\"failed to glue exposure\", exposure)\n", "    print(\"will glue jsonified\")\n", "    sb.glue(\"exposure\",json.dumps(denumpyfy(exposure), cls=CustomJSONEncoder))\n", "\n", "isinstance(exposure,str) and os.path.exists(exposure) and sb.glue(\"exposure_content\",base64.b64encode(open(exposure,'rb').read()).decode())\n"]}], "metadata": {"kernelspec": {"display_name": "Python 3.9.13 ('base')", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.9.13"}, "papermill": {"default_parameters": {}, "duration": 16.832715, "end_time": "2023-01-05T15:35:00.881635", "environment_variables": {}, "exception": null, "input_path": "/tmp/nb2w-c1r8m3c_/spi_preproc.ipynb", "output_path": "/tmp/nb2w-c1r8m3c_/spi_output.ipynb", "parameters": {}, "start_time": "2023-01-05T15:34:44.048920", "version": "2.4.0"}, "vscode": {"interpreter": {"hash": "1892832a55cb9b21d693a1e0afb7563f6ad424a1b7b3da21728b3ea0874fe733"}}}, "nbformat": 4, "nbformat_minor": 5}, "output_values": {"sn_max": 2.6278204917907715, "sn": 2.6278204917907715, "sn_total": 2.1721076372265005, "exposure": 134228.193639351}}